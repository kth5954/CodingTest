* 복잡도는 알고리즘의 성능을 나타내는 척도입니다.
    - 시간 복잡도: 특정한 크기의 입력에 대하여 알고리즘의 수행 시간 분석
    - 공간 복잡도: 특정한 크기의 입력에 대하여 알고리즘의 메모리 사용량 분석
* 동일한 기능을 수행하는 알고리즘이 있다면, 일반적으로 복잡도가 낮을수록 좋은 알고리즘입니다.

빅오표기법
* 가장 빠르게 증가하는 항 만을 고려하는 표기법
ex) 3차 함수 -> O(n^3)
순위: 상수시간 > 로그시간 > 선형시간 > 로그선형시간 > 이차시간 > 삼차시간 > 지수시간

일반적인 알고리즘 문제 해결 과정
1. 지문 읽기 및 컴퓨터적 사고
2. 요구사항(복잡도) 분석
3. 문제 해결을 위한 아이디어 찾기
4. 소스코드 설계 및 코딩
* 일반적으로 대부분의 문제 출제자들은 핵심 아이디어를 캐치한다면, 간결하게 소스코드를 작성
할 수 있는 형태로 문제를 출제합니다.